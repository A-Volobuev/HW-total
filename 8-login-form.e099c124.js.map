{"mappings":"mkBAAA,aACAA,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPN,OAAOC,eAAeK,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,KChBX,IAAAK,EAAAC,EAAA,SAAMC,EAASC,SAASC,cAAc,eAEhCC,EAAWF,SAASG,eAAe,YAKhBJ,EAAlBK,iBAAiB,UAExB,SAAwBC,GAE2BA,EAAzCC,iBAEN,IAU2CC,EAVrCC,EAAeH,EAAMI,cAAcC,SAGnCC,EAAOH,EAAaI,MAAMtB,MAC1BuB,EAAWL,EAAaK,SAASvB,MAC5B,IAARqB,GAA0B,IAAZE,GACbC,MAAM,kCAIV,IAAMC,GAAWR,EAGhB,GAFGS,EAAAnB,EAAA,CADaU,EACZC,EAAaI,MAAMK,KAAON,GAC3BK,EAAAnB,EAAA,CAFaU,EAEZC,EAAaK,SAASI,KAAOJ,GAFjBN,GAIjBW,QAAQC,IAAIJ,GAGKhB,EAAVqB,QAGqD,IAAtDC,EAAa,2EAAgFC,OAALX,EAAK,oBAGjGY,EAAQvB,SAASwB,cAAc,OACrCD,EAAME,UAAUC,IAAI,QAAS,kBAC7BH,EAAMI,UAAYN,EAClBnB,EAAS0B,YAAYL,GAErBM,YAAW,WACPN,EAAMO,Q,GACR,I","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/js/8-login-form.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const formEl = document.querySelector('.login-form');\n\nconst toastBox = document.getElementById('toastBox');\n\n\n// Обработка отправки формы form.login-form должна быть по событию submіt\n    // Добавляем слушателя событий\nformEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n// При отправке формы страница не должна перезагружаться.\n    event.preventDefault();\n\n    const formElements = event.currentTarget.elements;\n\n// Если в форме есть незаполненные поля, выводи alert с предупреждением о том, что все поля должны быть заполнены.\n    const mail = formElements.email.value;\n    const password = formElements.password.value;\n    if(mail == '' || password == ''){\n        alert('Все поля должны быть заполнены');\n    }; \n\n// Собираем данные с формы в 1 обьект. Я не придумал как сделать это иначе, кроме как вот ручками записать.\n    const objValue = {\n        [formElements.email.name]: mail, \n        [formElements.password.name]: password,\n    }\n    console.log(objValue);\n\n// Очищаю поля инпутов\n    formEl.reset(); \n\n// Меседж который мы выводим, добавляю тут, что бы использовать переменную mail\n    const successMsg = `<i class=\"fa-solid fa-circle-check toast-icon toast-icon__success\"></i> ${mail} вошел в аккаунт`;\n\n// Появление окна\nconst toast = document.createElement('div');\ntoast.classList.add('toast', 'toast__success');\ntoast.innerHTML = successMsg;\ntoastBox.appendChild(toast);\n\nsetTimeout(()=>{\n    toast.remove();\n},6000);\n}; \n"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","$hKHmD","parcelRequire","$7888e94fe0d4993f$var$formEl","document","querySelector","$7888e94fe0d4993f$var$toastBox","getElementById","addEventListener","event","preventDefault","_obj","formElements","currentTarget","elements","mail","email","password","alert","objValue","$parcel$interopDefault","name","console","log","reset","successMsg","concat","toast","createElement","classList","add","innerHTML","appendChild","setTimeout","remove"],"version":3,"file":"8-login-form.e099c124.js.map"}