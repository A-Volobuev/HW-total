{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCACMC,EAAW,+BACXC,EAAU,CACZC,QAAS,CACL,YAJQ,0EAUDC,ECVX,W,sBDUiBC,I,aAGUC,KAAlBC,QAAU,E,iBAGbC,IAAA,c,MAAN,W,OAAAC,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,I,IACUC,EAEAC,EACAC,E,yEAHAF,EAAY,GAAYG,OAATf,EAAS,W,SAEEgB,MAAMJ,EAAWX,G,cAA3CY,EAAiBI,EAAAC,K,SACeL,EAAkBM,O,cAAlDL,EAAuBG,EAAAC,K,kBAEtBJ,G,0CANX,E,IASMP,IAAA,kB,MAAN,W,kBAAAC,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUS,EAEAC,EACAC,E,yEAHAF,EAAkB,GAAuCL,OAApCf,EAAS,6BAAwCe,OAAbQ,EAAKjB,S,SAE9BU,MAAMI,EAAiBnB,G,cAAvDoB,EAAuBJ,EAAAC,K,SACRG,EAAwBF,O,cAAvCG,EAAML,EAAAC,K,kBAELI,G,0CAPX,E,IAUIf,IAAA,U,IAAJ,WACI,OAAOF,KAAKC,O,MAGhB,SAAYkB,GACRnB,KAAKC,QAAUkB,C,OCxCnB,G,uCCQEC,EAAcC,SAASC,cAAc,iBACrCC,EAAmBF,SAASC,cAAc,aAC1CE,EAAmBH,SAASC,cAAc,sBAC1CG,EAASJ,SAASC,cAAc,qBAGhCI,EAAgB,IAAI5B,EAwDR,SAAT6B,EAAgBC,GACrBR,EAAYS,mBAAmB,aAAa,EAAAC,EAAAC,SAAsBH,G,CAtD5CR,EAAdY,iBAAiB,UAOE,SAAFC,GAEyCP,EAApDzB,QAAUgC,EAAEC,cAAcC,MAExCV,EAAOW,UAAUC,OAAO,YAGWX,EAArBY,kBACbC,MAAK,SAAAX,GAiDNL,EAAiBiB,UAAY,GANC,SAAKZ,GACnCL,EAAiBM,mBAAmB,aAAY,EAAAY,EAAAV,SAAuBH,G,CAxCnEc,CAA6Bd,GAE7BH,EAAOW,UAAUO,IAAI,W,IAExBC,OAAM,SAAAC,GACHC,EAAAC,OAAOC,QACH,SACM,GAAGtC,OAANmC,GACH,O,OAzBuCzB,EAAvCY,iBAAiB,SAAS,WAClCR,EAAiBY,UAAUO,IAAI,W,IA+B/BvB,EAAYgB,UAAUO,IAAI,YAG1BjB,EAAcuB,cACTV,KAAKZ,GACLiB,OAAM,SAAAC,GACHC,EAAAC,OAAOC,QACH,SACM,GAAGtC,OAANmC,GACH,O,IAGZpB,EAAOW,UAAUO,IAAI,YACrBvB,EAAYgB,UAAUC,OAAO,W","sources":["src/js/components/19-async-cat-api.js","<<jsx-config-pragma.js>>","src/js/19-async-api.js"],"sourcesContent":["const API_KEY = 'live_7ad8upyX21GZXAiarpBVFKI96kSct8KgO5N7x1ungdbJekziVwWJNouLsXsd0P7L';\nconst BASE_URL = 'https://api.thecatapi.com/v1';\nconst options = {\n    headers: {\n        'X-Api-Key': API_KEY,\n    },\n};\n\n\n\nexport default class CatApiService {\n    constructor() {\n        // 5. Сохраняем выбраную породу\n        this.breedId = '';\n    }\n\n    async fetchBreeds() {\n        const breedsUrl = `${BASE_URL}/breeds`\n\n        const selectFetchBreeds = await fetch(breedsUrl, options);\n        const resultSelectFetchBreeds = await selectFetchBreeds.json();\n\n        return resultSelectFetchBreeds;\n    }\n\n    async fetchCatByBreed () {\n        // настройки для запроса с сервера\n        const selectBreedsUrl = `${BASE_URL}/images/search?breed_ids=${this.breedId}`\n\n        const fetchCatByBreedInSelect = await fetch(selectBreedsUrl, options);\n        const result = await fetchCatByBreedInSelect.json();\n\n        return result;\n    }\n\n    get idBreed() {\n        return this.breedId;\n    }\n\n    set idBreed(newBreedId) {\n        this.breedId = newBreedId;\n    }\n}",null,"// Импортирую настройки select из хбс\nimport '../scss/19-api.scss'\nimport CatApiService from './components/19-async-cat-api';\nimport createOptionsInSelect from '../templates/19-select-option.hbs';\nimport informationBlockMarkup from '../templates/19-informative-block.hbs';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\n// Привязываем элементы \nconst selectBreed = document.querySelector('.breed-select');\nconst informativeBlock = document.querySelector('.cat-info');\nconst decorativeOption = document.querySelector('.decorative-option');\nconst loader = document.querySelector('.container-loader');\n\n// Добавляем сюда наш класс запросов\nconst catApiService = new CatApiService();\n\n// Слушатель событий на селектор\nselectBreed.addEventListener('change', onSelectBreedChange);\n    //Добавил что бы при первом клике убрать декоративный пустой option с select \nselectBreed.addEventListener('click', function () {\n    decorativeOption.classList.add('is-hiden');\n});\n\n//------ Функция при выборе на селекте породы \nfunction onSelectBreedChange(e) {\n    // Сохраняем выбранную в переменную, для дальнейшей загрузки полной информации\n    catApiService.breedId = e.currentTarget.value;\n\n    loader.classList.remove('is-hiden');\n    \n    // Добавляем разметку на конкретную породу\n    catApiService.fetchCatByBreed()\n    .then(data => {\n        // Очищаем страницу при выборе новой породы\n        clearInformationBlock();\n\n        createInformationBlockMarkup(data);\n\n        loader.classList.add('is-hiden')\n    })\n    .catch(error => {\n        Report.failure(\n            'Ошибка',\n            `${error}`,\n            'Okay',\n        );\n    });\n}\n\n// 3. создаем функцию запроса и добавляем выбор в селект\nfunction selectOption() {\n    selectBreed.classList.add('is-hiden')\n\n\n    catApiService.fetchBreeds()\n        .then(addSelectBreed)\n        .catch(error => {\n            Report.failure(\n                'Ошибка',\n                `${error}`,\n                'Okay',\n                );})\n\n    loader.classList.add('is-hiden')\n    selectBreed.classList.remove('is-hiden')\n}\n// 3. Вызываем фукнцию\nselectOption();\n\n// 3. Функция добавления option в select\nfunction addSelectBreed (data) {\n    selectBreed.insertAdjacentHTML('beforeend', createOptionsInSelect(data))\n}\n\n// 7. Функция добавляет разметку на страницу\nfunction createInformationBlockMarkup (data) {\n    informativeBlock.insertAdjacentHTML('beforeend',informationBlockMarkup(data)) \n}\n\n// 7. Функция очистки разметки \nfunction clearInformationBlock () {\n    informativeBlock.innerHTML = '';\n}\n\n\n// 1. Получаем ключ\n// 2. Делаем Гет запрос\n// 3. При успешном запросе, необходимо наполнить select.breed-select опциями так, чтобы value опции содержал id породы,\n    //  а в интерфейсе пользователю отображалось название породы. \n// 4.Когда пользователь выбирает опцию в селекте, необходимо выполнять запрос за полной информацией о коте на ресурс\n    //  https://api.thecatapi.com/v1/images/search. Не забудь указать в этом запросе параметр строки запроса breed_ids \n    // с идентификатором породы.\n// 5. Сохраняем выбраную породу в breedId\n// 6. fetchCatByBreed(breedId) которая ожидает идентификатор породы, делает HTTP-запрос и возвращает промис с данными \n    // о коте - результатом запроса.\n// 7. Если запрос был успешный, под селектом, в блоке div.cat-info появляется изображение и развернутая информация о \n    // коте: название породы, описание и темперамент."],"names":["$bpxeT","parcelRequire","$eb8eb3e8d5c658a0$var$BASE_URL","$eb8eb3e8d5c658a0$var$options","headers","$eb8eb3e8d5c658a0$export$2e2bcd8739ae039","CatApiService","this","breedId","key","$parcel$interopDefault","$2TvXO","mark","_callee","breedsUrl","selectFetchBreeds","resultSelectFetchBreeds","concat","fetch","_ctx","sent","json","selectBreedsUrl","fetchCatByBreedInSelect","result","_this","newBreedId","$73800e1f07244be5$var$selectBreed","document","querySelector","$73800e1f07244be5$var$informativeBlock","$73800e1f07244be5$var$decorativeOption","$73800e1f07244be5$var$loader","$73800e1f07244be5$var$catApiService","$73800e1f07244be5$var$addSelectBreed","data","insertAdjacentHTML","$iu6PT","default","addEventListener","e","currentTarget","value","classList","remove","fetchCatByBreed","then","innerHTML","$kuYwY","$73800e1f07244be5$var$createInformationBlockMarkup","add","catch","error","$fivgP","Report","failure","fetchBreeds"],"version":3,"file":"19-async-api.4af1a070.js.map"}