{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BmD,SAA1CC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KAEHN,EACAO,EAAAZ,GAASa,OAAOC,QAAQ,YAACX,eAA4BC,OAErDQ,EAAAZ,GAASa,OAAOE,QAAQ,YAACZ,eAA4BC,MAAA,GAElDA,EAAM,G,CAvCDY,SAASC,cAAc,SAE/BC,iBAAiB,UAE7B,SAA6BC,GAEoBA,EAAzCC,iBAGgB,MAAhBC,EAAeF,EAAMG,cAAcC,SAGnCnB,EAAQoB,OAAOH,EAAajB,MAAMqB,OAClCC,EAAOF,OAAOH,EAAaK,KAAKD,OAChCE,EAASH,OAAOH,EAAaM,OAAOF,OAG3B,IAAX,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAI,CAE7B1B,EAAc0B,EAAI,EADExB,EAAQwB,EAAIF,GACEG,MAAKC,IACrCC,QAAQC,IAAIF,EAAO,IAClBG,OAAMC,IACLH,QAAQC,IAAIE,EAAM,G","sources":["src/js/18-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formPromise = document.querySelector('.form');\n\nformPromise.addEventListener('submit', onFormPromiseSubmit);\n\nfunction onFormPromiseSubmit(event) {\n  // При отправке формы страница не должна перезагружаться.\n  event.preventDefault();\n   \n  // Получаем значения с полей \n  const formElements = event.currentTarget.elements;\n\n  // Возвращать нужно ЧИСЛО\n  const delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n\n  // Пробую перебором\n  for(let i = 0; i < amount; i++){\n    const stepByDelay = delay + i * step;\n    createPromise(i + 1, stepByDelay).then(result =>{\n      console.log(result);\n    }).catch(error => {\n        console.log(error);\n    });\n  };\n};\n\n  //position - Просто номер промиса (каким он выполняется, первый, второй и тд)\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n        // Симулируем успешное выполнение 70% промисов\n        if (shouldResolve) {\n            Notiflix.Notify.success(`Промис✅: ${position} Задержка: ${delay}ms`);\n        } else {\n            Notiflix.Notify.warning(`Промис❌: ${position} Задержка: ${delay}ms`);\n        }\n    }, delay);\n  });\n}\n"],"names":["$1GAPJ","parcelRequire","$8bea29dfd7b8d09c$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","warning","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","Number","value","step","amount","i","then","result","console","log","catch","error"],"version":3,"file":"18-promises.87326da9.js.map"}